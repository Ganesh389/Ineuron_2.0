1. Is the Python Standard Library included with PyInputPlus?
PyInputPlus is a third-party module and doesn't come with the Python Standard Library.

2. Why is PyInputPlus commonly imported with import pyinputplus as pypi?
We can import the module with import pyinputplus as pyip so that you can enter a shorter name when calling the module's functions. 
PyInputPlus has functions for entering a variety of input, including strings, numbers, dates, yes/no, True/False, emails, and files.

3. How do you distinguish between inputInt() and inputFloat()?
The inputInt() function returns an integer, while the inputFloat() function returns a float value. 
The inputFloat() function returns an integer, while the inputInt() function returns a float.

4. Using PyInputPlus, how do you ensure that the user enters a whole number between 0 and 99?
 In the inputint function we can set the min = 0 and max =99 to ensure user enters number between 0 and 99

pyip.inputInt(min = 0, max =99)
     
777
Number must be at maximum 99.
66
66

5. What is transferred to the keyword arguments allowRegexes and blockRegexes?
We can also use regular expressions to specify whether an input is allowed or not. The allowRegexes and blockRegexes
keyword arguments take a list of regular expression strings to determine what the PyInputPlus function will accept or reject as valid input.


response = pyip.inputNum(allowRegexes=[r'(I|V|X|L|C|D|M)+', r'zero']) # it allowes roman letters as numbers too
     
X

response = pyip.inputNum(blockRegexes=[r'[02468]$'])# blocks the even numbers
     
2
This response is invalid.
4
This response is invalid.
6
This response is invalid.
45

6. If a blank input is entered three times, what does inputStr(limit=3) do?
It will throw RetryLimitException exception.

response = pyip.inputStr(limit=3)

     
Blank values are not allowed.

Blank values are not allowed.

Blank values are not allowed.

7. If blank input is entered three times, what does inputStr(limit=3, default=&#39;hello&#39;) do?
When you use limit keyword arguments and also pass a default keyword argument, the function returns the default value instead of raising an exception


response = pyip.inputStr(limit=3,default='hello')
response
     
Blank values are not allowed.

Blank values are not allowed.

Blank values are not allowed.
'hello'
